{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\React Router - Events\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport { json } from \"react-router\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    return json({\n      message: \"could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\n\n// import { useLoaderData } from \"react-router-dom\";\n// import { json } from \"react-router\";\n\n// import EventsList from \"../components/EventsList\";\n\n// function EventsPage() {\n//   const data = useLoaderData();\n//   // if (data.isError) {\n//   //   return <p>{data.message}</p>;\n//   // }\n//   const events = data.events;\n\n//   return (\n//     <>\n//       <EventsList events={events} />\n//     </>\n//   );\n// }\n\n// export default EventsPage;\n\n// export async function loader() {\n//   const response = await fetch(\"http://localhost:8080/events\");\n\n//   if (!response.ok) {\n//     // return { isError: true, message: \"could not fetch events...\" };\n//     // throw new Response(JSON.stringify({ message: \"Couldnot fetch events\" }), {\n//     //   status: 500,\n//     // });\n//     return (\n//       json({ message: \"could not fetch events\" }),\n//       {\n//         status: 500,\n//       }\n//     );\n//   } else {\n//     return response;\n//   }\n// }\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","$RefreshReg$"],"sources":["D:/REACT/React Router - Events/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\r\nimport { json } from \"react-router\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  const events = data.events;\r\n\r\n  return (\r\n    <>\r\n      <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    return json(\r\n      { message: \"could not fetch events\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n\r\n// import { useLoaderData } from \"react-router-dom\";\r\n// import { json } from \"react-router\";\r\n\r\n// import EventsList from \"../components/EventsList\";\r\n\r\n// function EventsPage() {\r\n//   const data = useLoaderData();\r\n//   // if (data.isError) {\r\n//   //   return <p>{data.message}</p>;\r\n//   // }\r\n//   const events = data.events;\r\n\r\n//   return (\r\n//     <>\r\n//       <EventsList events={events} />\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default EventsPage;\r\n\r\n// export async function loader() {\r\n//   const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n//   if (!response.ok) {\r\n//     // return { isError: true, message: \"could not fetch events...\" };\r\n//     // throw new Response(JSON.stringify({ message: \"Couldnot fetch events\" }), {\r\n//     //   status: 500,\r\n//     // });\r\n//     return (\r\n//       json({ message: \"could not fetch events\" }),\r\n//       {\r\n//         status: 500,\r\n//       }\r\n//     );\r\n//   } else {\r\n//     return response;\r\n//   }\r\n// }\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,IAAI,QAAQ,cAAc;AAEnC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGT,aAAa,CAAC,CAAC;EAC5B,MAAMU,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CATQD,UAAU;EAAA,QACJP,aAAa;AAAA;AAAAgB,EAAA,GADnBT,UAAU;AAWnB,eAAeA,UAAU;AAEzB,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOnB,IAAI,CACT;MAAEoB,OAAO,EAAE;IAAyB,CAAC,EACrC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAF,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}